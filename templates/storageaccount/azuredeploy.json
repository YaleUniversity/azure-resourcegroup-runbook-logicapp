{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "metadata": {
        "comment": "This Azure Resource Managemer template creates an Azure Storage Account. It enforces conventions regarding the resource name and its tags.",
        "author": "Yale University",
        "licence": {
            "uri": "/LICENSE.md"
        }
    },

    "parameters": {
        "ResourceLocation": {
            "type": "string",
            "metadata": {
                "Description": "Azure region. (NB, This value will override the `-Location` parameter specified by `New-AzDeployment` or  the `--location` option of `az deploy create`"
            }
        },
        "OwnerSignInName": {
            "type": "string",
            "defaultValue": "inherited",
            "metadata": {
                "description": "The Azure sign-in name (email address) of the functional owner of the resource group to be placed into Azure. The person to be notified of changes or interruptions to the operations of their application or workload in Azure.",
                "comment": "Institutional Property"
            }
        },
        "ChargingAccount": {
            "type": "string",
            "defaultValue": "inherited",
            "metadata": {
                "description": "The string denoting the account to which costs incurred by the application or workload to be placed in Azure should be charged.",
                "comment": "Institutional Property"
            }
        },
        "ApplicationName": {
            "type": "string",
            "metadata": {
                "description": "A string that identifies the product or function of the application or workload to be placed into Azure.",
                "comment": "Institutional Property"
            }
        },
        "ApplicationBusinessUnit": {
            "type": "string",
            "metadata": {
                "description": "A string that identifies the institutional business unit or academic department served by he product or function of the application to be placed into Azure",
                "comment": "Institutional Property"
            }            
        },
        "Environment": {
            "type": "string",
            "allowedValues": [ "dev", "test", "prod", "Dev", "Test", "Prod" ],
            "metadata": {
                "description": "The application or workload environment. Available values are dev, test and prod.",
                "comment": "Institutional Property"
            }
        },
        "DataSensitivity": {
            "type": "string",
            "defaultValue": "none",
            "allowedValues": [ "High", "Moderate", "Low", "None", "high", "moderate", "low", "none" ],
            "metadata": {
                "description": "A string that denotes the degree of risk and impact to the institution should data handled by the resource be disclosed outside of the institution [ref](https://cybersecurity.yale.edu/classifyingtechnology).",
                "comment": "Institutional Property"
            }
        },
        "SkuName" : { 
            "type": "string",
            "allowedValues": [ "Standard_LRS", "Standard_GRS", "Standard_RAGRS", "Standard_ZRS", "Premium_LRS" ],
            "defaultValue": "Standard_LRS",
            "metadata": {
                "description": "Specifies storage account product (Standard vs Premium) and replication/availability service level (Local, Zone, Geographic, or Read Access/Geographic redundancy). The least expensive option is Standard_LRS (Standard Local Redundant Storage) and is the default selected by the institution for general usage. The contents of a Standard_LRS account are replicated across the storage nodes in a single fault domain (equipment rack/unit) in a datacenter. Premium_LRS (Premium Local Storage is intended for VMs with demanding IO requirements."
            }
        },
        "AccountKind" : { 
            "type": "string", 
            "allowedValues": [ "StorageV2", "Storage", "BlobStorage" ],
            "defaultValue": "StorageV2",
            "metadata": {
                "description": "Specifies the Azure storage account type. StorageV2 (Storage Accounts V2) is the most recent version offering the most versatility for general use and is the default."
            }
        },
        "AccessTierDefault": {
            "type": "string",
            "allowedValues": [ "Hot", "Cool" ],
            "defaultValue": "Hot",
            "metadata": {
                "description": "Hot storage is optimized for data that is frequently accessed. Cool storage is optimized for data that is infrequently accessed and stored for at least 30 days. NB, this is the access tier for any blobs whose individual access tiers have not been explicitly assigned and are created under this account. This value is not relevant to Storage version 1 types and is ignored at deployment."
            }
        },
        "CustomDomain": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "description": "A custom domain name may be assigned to this storage account's endpoint. Cf, https://docs.microsoft.com/en-us/azure/storage/blobs/storage-custom-domain-name"
            }
        }
    },

    "variables": {
        "baseString": "[concat(parameters('ApplicationName'), '-', parameters('ApplicationBusinessUnit'), '-', parameters('Environment'), '-', parameters('ResourceLocation'))]",
        "resourceGroupName": "[concat(parameters('ApplicationName'), '-', parameters('ApplicationBusinessUnit'), '-', parameters('Environment'), '-', parameters('ResourceLocation'), '-rg')]",
        "resourceLocation": "[if(equals(parameters('ResourceLocation'), ''), resourceGroup().location, parameters('ResourceLocation'))]",
        "name": "[concat(variables('baseString'), '-storage')]",
        "storageAccount": "[concat('yale', uniqueString(variables('name')))]",
        "skuName": "[parameters('SkuName')]",
        "accountKind": "[parameters('AccountKind')]",
        "accessTierDefault": "[parameters('AccessTierDefault')]",
        "customDomain": "[parameters('customDomain')]",
        "resourceGroupTags": "[resourceGroup().tags]",
        "storageAccountTags": {
            "OwnerDepartmentContact": "[if(equals(parameters('OwnerSignInName'), 'inherited'), resourceGroup().tags.OwnerDepartmentContact, parameters('OwnerSignInName'))]",
            "DataSensitivity": "[parameters('DataSensitivity')]",
            "ChargingAccount": "[if(equals(parameters('ChargingAccount'), 'inherited'), resourceGroup().tags.ChargingAccount, parameters('ChargingAccount'))]",
            "Name": "[variables('name')]"
        }
    },

    "resources": [        
    {
        "name": "[variables('storageAccount')]",
        "type": "Microsoft.Storage/storageAccounts",
        "apiVersion": "2018-11-01",
        "sku": {
            "name": "[variables('skuName')]"
        },
        "kind": "[variables('accountKind')]",
        "location": "[variables('resourceLocation')]",
        "identity": {
            "type": "SystemAssigned"
        },
        "properties": {
            "accessTier": "[variables('accessTierDefault')]",
            "customDomain": {
                "name": "[variables('customDomain')]",
                "useSubDomain": true
            },
            "supportsHttpsTrafficOnly": true
        },

        "tags": "[variables('storageAccountTags')]"
    }  
    ],
    
    "outputs": { 
        "storageAccountName": {
            "type": "string",
            "value": "[variables('storageAccount')]"
        },
        "resourceId": {
            "type": "string",
            "value": "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccount'))]"
        },
        "tags": {
            "type": "object",
            "value": "[variables('storageAccountTags')]"
        },
        "resourceGroupTags": {
            "type": "object",
            "value": "[variables('resourceGroupTags')]"
        }
    }
}